============================
How to Use 0-add_integer.txt
============================
This library contains test cases for the add_integer() function.

>>> add_integer = __import__("0-add_integer").add_integer

Test Cases
==========
>>> add_integer(12, 4)
16

>>> add_integer(12, -4)
8

>>> add_integer(-4, 12)
8

>>> add_integer(12.0, 4)
16

>>> add_integer(12.0, 4.0)
16

>>> add_integer(-12.0, -4.0)
-16

>>> add_integer(12)
110

>>> add_integer(12.0, "4")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("12", 4)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer("-12.0", "-4.0")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(6BJSP)
Traceback (most recent call last):
SyntaxError: invalid syntax

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
