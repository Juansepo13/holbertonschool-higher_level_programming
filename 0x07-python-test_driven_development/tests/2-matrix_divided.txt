===============================
How to Use 2-matrix_divided.txt
===============================
This library contains test cases for the matrix_divided() function.

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Test Cases
==========
>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided(matrix, 1.5)
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

>>> matrix_divided(matrix, 10000)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1]], 6)
[[0.17]]

>>> matrix_divided([[1, 2, 3]], 1)
[[1.0, 2.0, 3.0]]

>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided(matrix)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided(6BJSP)
Traceback (most recent call last):
SyntaxError: invalid syntax

>>> matrix = [[1, 2, "Juan"], [3, 4, 5]]

>>> matrix = [[1, 2, 3], ["JSP", 4, 5]]

>>> matrix = [[1, 2, [3, 4, 5]], ["JSP", 6, 7]]

>>> matrix = []

>>> matrix_divided(matrix, 6)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [(1, 2, 3), [4, 5, 6]]

>>> matrix = ((1, 2, 3), (4, 5, 6))

>>> matrix = [[1, 2, (3, 4, 5)], [6, 7, 8]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
